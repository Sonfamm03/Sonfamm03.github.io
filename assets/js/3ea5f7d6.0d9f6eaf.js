"use strict";(self.webpackChunkmirai_sdk_doc=self.webpackChunkmirai_sdk_doc||[]).push([[332],{9889:(e,d,n)=>{n.r(d),n.d(d,{assets:()=>t,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>o});var i=n(5893),r=n(1151);const s={slug:"/shards-api/leaderboard"},a="Leaderboard API",l={id:"Shards API/Leaderboard API",title:"Leaderboard API",description:"Create a New Leaderboard",source:"@site/docs/4. Shards API/3. Leaderboard API.md",sourceDirName:"4. Shards API",slug:"/shards-api/leaderboard",permalink:"/shards-api/leaderboard",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{slug:"/shards-api/leaderboard"},sidebar:"defaultSidebar",previous:{title:"Game Configuration API",permalink:"/shards-api/game-config"},next:{title:"Guilds API",permalink:"/shards-api/guilds"}},t={},o=[{value:"Create a New Leaderboard",id:"create-a-new-leaderboard",level:2},{value:"Endpoint",id:"endpoint",level:3},{value:"Authorization",id:"authorization",level:3},{value:"Headers",id:"headers",level:3},{value:"Description",id:"description",level:3},{value:"Request Body",id:"request-body",level:3},{value:"Response",id:"response",level:3},{value:"Tags",id:"tags",level:3},{value:"Update Guild Score",id:"update-guild-score",level:2},{value:"Endpoint",id:"endpoint-1",level:3},{value:"Authorization",id:"authorization-1",level:3},{value:"Headers",id:"headers-1",level:3},{value:"Description",id:"description-1",level:3},{value:"Request Body",id:"request-body-1",level:3},{value:"Response",id:"response-1",level:3},{value:"200 OK",id:"200-ok",level:4},{value:"Tags",id:"tags-1",level:3}];function c(e){const d={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(d.h1,{id:"leaderboard-api",children:"Leaderboard API"}),"\n",(0,i.jsx)(d.h2,{id:"create-a-new-leaderboard",children:"Create a New Leaderboard"}),"\n",(0,i.jsx)(d.h3,{id:"endpoint",children:"Endpoint"}),"\n",(0,i.jsx)(d.p,{children:(0,i.jsx)(d.code,{children:"POST /v1/leader-boards"})}),"\n",(0,i.jsx)(d.h3,{id:"authorization",children:"Authorization"}),"\n",(0,i.jsxs)(d.ul,{children:["\n",(0,i.jsxs)(d.li,{children:["Guarded by ",(0,i.jsx)(d.code,{children:"ApiKeyGuard"})]}),"\n",(0,i.jsxs)(d.li,{children:["Requires Api key (",(0,i.jsx)(d.code,{children:"api-key"}),")"]}),"\n"]}),"\n",(0,i.jsx)(d.h3,{id:"headers",children:"Headers"}),"\n",(0,i.jsxs)(d.ul,{children:["\n",(0,i.jsxs)(d.li,{children:[(0,i.jsx)(d.strong,{children:"api-key"}),": ",(0,i.jsx)(d.code,{children:"<api_key>"})]}),"\n"]}),"\n",(0,i.jsx)(d.h3,{id:"description",children:"Description"}),"\n",(0,i.jsx)(d.p,{children:"This endpoint is used to create a new leaderboard for a guild. It requires information about the guild, the type of leaderboard, and additional metadata, if applicable."}),"\n",(0,i.jsx)(d.h3,{id:"request-body",children:"Request Body"}),"\n",(0,i.jsxs)(d.p,{children:["The request body must conform to the ",(0,i.jsx)(d.code,{children:"CreateLeaderBoardDto"})," structure and should include the following fields:"]}),"\n",(0,i.jsxs)(d.ul,{children:["\n",(0,i.jsxs)(d.li,{children:[(0,i.jsx)(d.code,{children:"name"})," (string): The name of the guild."]}),"\n",(0,i.jsxs)(d.li,{children:[(0,i.jsx)(d.code,{children:"type"})," (string): The type of the leaderboard, either 'increased' or 'replace'."]}),"\n",(0,i.jsxs)(d.li,{children:[(0,i.jsx)(d.code,{children:"metadata"})," (object): Additional metadata about the guild, optional."]}),"\n",(0,i.jsxs)(d.li,{children:[(0,i.jsx)(d.code,{children:"clientId"})," (string): The identifier of the game client."]}),"\n"]}),"\n",(0,i.jsx)(d.p,{children:"Example of a valid request payload:"}),"\n",(0,i.jsx)(d.pre,{children:(0,i.jsx)(d.code,{className:"language-json",children:'{\n  "name": "cat",\n  "type": "increased",\n  "metadata": {\n    "description": "This is a cat",\n    "image": "https://i.imgur.com/4M34hi2.jpeg"\n  },\n  "clientId": "a0bac604-0fa4-447a-a3de-4deff02008c4"\n}\n'})}),"\n",(0,i.jsx)(d.h3,{id:"response",children:"Response"}),"\n",(0,i.jsx)(d.p,{children:"Upon successful creation, the API will return a LeaderBoards object."}),"\n",(0,i.jsx)(d.pre,{children:(0,i.jsx)(d.code,{className:"language-json",children:'{\n  "status": "Success",\n  "data": {\n    // The LeaderBoards object will be returned here\n  }\n}\n'})}),"\n",(0,i.jsx)(d.h3,{id:"tags",children:"Tags"}),"\n",(0,i.jsx)(d.p,{children:(0,i.jsx)(d.code,{children:"Game Server"})}),"\n",(0,i.jsx)(d.h2,{id:"update-guild-score",children:"Update Guild Score"}),"\n",(0,i.jsx)(d.h3,{id:"endpoint-1",children:"Endpoint"}),"\n",(0,i.jsx)(d.p,{children:(0,i.jsx)(d.code,{children:"PUT /v1/guild-score"})}),"\n",(0,i.jsx)(d.h3,{id:"authorization-1",children:"Authorization"}),"\n",(0,i.jsxs)(d.ul,{children:["\n",(0,i.jsxs)(d.li,{children:["Guarded by ",(0,i.jsx)(d.code,{children:"ApiKeyGuard"})]}),"\n",(0,i.jsxs)(d.li,{children:["Requires Api key (",(0,i.jsx)(d.code,{children:"api-key"}),")"]}),"\n"]}),"\n",(0,i.jsx)(d.h3,{id:"headers-1",children:"Headers"}),"\n",(0,i.jsxs)(d.ul,{children:["\n",(0,i.jsxs)(d.li,{children:[(0,i.jsx)(d.strong,{children:"api-key"}),": ",(0,i.jsx)(d.code,{children:"<api_key>"})]}),"\n"]}),"\n",(0,i.jsx)(d.h3,{id:"description-1",children:"Description"}),"\n",(0,i.jsx)(d.p,{children:"This endpoint allows for updating the score of a specific guild. It requires details about the guild, the leaderboard, and the score to be updated."}),"\n",(0,i.jsx)(d.h3,{id:"request-body-1",children:"Request Body"}),"\n",(0,i.jsxs)(d.p,{children:["The request body must follow the ",(0,i.jsx)(d.code,{children:"UpdateGuildScoreDto"})," structure and should include the following fields:"]}),"\n",(0,i.jsxs)(d.ul,{children:["\n",(0,i.jsxs)(d.li,{children:[(0,i.jsx)(d.code,{children:"guildId"})," (string): The identifier of the guild whose score is to be updated."]}),"\n",(0,i.jsxs)(d.li,{children:[(0,i.jsx)(d.code,{children:"leaderBoardId"})," (string): The identifier of the leaderboard associated with this score."]}),"\n",(0,i.jsxs)(d.li,{children:[(0,i.jsx)(d.code,{children:"clientId"})," (string): The identifier of the client making the request."]}),"\n",(0,i.jsxs)(d.li,{children:[(0,i.jsx)(d.code,{children:"score"})," (number): The new score to be updated for the guild."]}),"\n"]}),"\n",(0,i.jsx)(d.p,{children:"Example of a valid request payload:"}),"\n",(0,i.jsx)(d.pre,{children:(0,i.jsx)(d.code,{className:"language-json",children:'{\n  "guildId": "5f9d7a3c9d5f1d0b7c9bce0e",\n  "leaderBoardId": "5f9d7a3c9d5f1d0b7c9bce0e",\n  "clientId": "5f9d7a3c9d5f1d0b7c9bce0e",\n  "score": 100\n}\n'})}),"\n",(0,i.jsx)(d.h3,{id:"response-1",children:"Response"}),"\n",(0,i.jsx)(d.h4,{id:"200-ok",children:"200 OK"}),"\n",(0,i.jsx)(d.p,{children:"Upon the successful update, the API will return a GuildScore object."}),"\n",(0,i.jsx)(d.pre,{children:(0,i.jsx)(d.code,{className:"language-json",children:'{\n  "status": "Success",\n  "data": {\n    // The updated GuildScore object\n  }\n}\n'})}),"\n",(0,i.jsx)(d.h3,{id:"tags-1",children:"Tags"}),"\n",(0,i.jsx)(d.p,{children:(0,i.jsx)(d.code,{children:"Game Server"})})]})}function h(e={}){const{wrapper:d}={...(0,r.a)(),...e.components};return d?(0,i.jsx)(d,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},1151:(e,d,n)=>{n.d(d,{Z:()=>l,a:()=>a});var i=n(7294);const r={},s=i.createContext(r);function a(e){const d=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(d):{...d,...e}}),[d,e])}function l(e){let d;return d=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:d},e.children)}}}]);